<!doctype html>
<html lang="uk">
<head>
<meta charset="utf-8">
<title>–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ–∑–∏—Ü—ñ—ó —Å–∞–π—Ç—É –≤ Google</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="csrf-token" content="{{ csrf_token() }}">
<style>
body{font-family:system-ui,'Segoe UI',Roboto,Arial,sans-serif;max-width:760px;margin:24px auto;padding:0 16px;line-height:1.5}
h1{margin-bottom:12px;color:#333}
p{color:#666;margin-bottom:20px}
.card{border:1px solid #eee;border-radius:12px;padding:20px;margin-top:16px;box-shadow:0 2px 4px rgba(0,0,0,0.1)}
label{font-weight:600;margin-top:12px;margin-bottom:6px;display:block;color:#333}
input,select,button{width:100%;padding:12px;border:1px solid #ddd;border-radius:8px;font-size:14px;box-sizing:border-box}
input:focus,select:focus{border-color:#4285f4;outline:none;box-shadow:0 0 0 2px rgba(66,133,244,0.2)}
.row{display:grid;grid-template-columns:1fr 1fr;gap:16px;margin-bottom:16px}
@media (max-width: 600px){.row{grid-template-columns:1fr}}
button{background:#1a73e8;color:#fff;cursor:pointer;margin-top:16px;border:none;font-weight:500;transition:background-color 0.2s}
button:hover:not([disabled]){background:#1557b0}
button[disabled]{opacity:.6;cursor:not-allowed;background:#ccc}
.result-success{background:#e8f5e8;border-color:#4caf50;color:#2e7d32}
.result-warning{background:#fff8e1;border-color:#ff9800;color:#ef6c00}
.result-error{background:#ffebee;border-color:#f44336;color:#c62828}
.position-highlight{font-size:1.2em;font-weight:700;color:#1a73e8}
.search-info{margin-top:12px;font-size:0.9em;color:#666;border-top:1px solid #eee;padding-top:12px}
pre{white-space:pre-wrap;font-family:monospace;font-size:0.9em}
.loading{display:inline-block;width:16px;height:16px;border:2px solid #fff;border-radius:50%;border-top-color:transparent;animation:spin 1s linear infinite;margin-right:8px}
@keyframes spin{to{transform:rotate(360deg)}}
</style>
</head>
<body>
<h1>üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ–∑–∏—Ü—ñ—ó —Å–∞–π—Ç—É –≤ Google</h1>
<p>–í–≤–µ–¥—ñ—Ç—å –ø–æ—à—É–∫–æ–≤–µ —Å–ª–æ–≤–æ, –¥–æ–º–µ–Ω, –∫—Ä–∞—ó–Ω—É —Ç–∞ –º–æ–≤—É ‚Äî —ñ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ø–æ–∑–∏—Ü—ñ—é —É –≤–∏–¥–∞—á—ñ Google.</p>

<div class="card">
<form id="searchForm">
<div class="row">
<div>
<label for="keyword">–ö–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ</label>
<input id="keyword" name="keyword" placeholder="–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: laravel tutorial" required>
</div>
<div>
<label for="domain">–î–æ–º–µ–Ω</label>
<input id="domain" name="domain" placeholder="–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: laravel.com" required>
</div>
</div>

<div class="row">
<div>
<label for="location_code">–õ–æ–∫–∞—Ü—ñ—è</label>
<select id="location_code" name="location_code" required>
@foreach($locations as $code => $name)
<option value="{{ $code }}"{{ $code == 2840 ? ' selected' : '' }}>{{ $name }}</option>
@endforeach
</select>
</div>
<div>
<label for="language_code">–ú–æ–≤–∞</label>
<select id="language_code" name="language_code" required>
@foreach($languages as $code => $name)
<option value="{{ $code }}"{{ $code == 'en' ? ' selected' : '' }}>{{ $name }}</option>
@endforeach
</select>
</div>
</div>

<button type="submit" id="btnSearch">–ü–æ—à—É–∫ –ø–æ–∑–∏—Ü—ñ—ó</button>
</form>
</div>

<div id="result" class="card" style="display:none"></div>

<script>
const csrf = document.querySelector('meta[name="csrf-token"]').content;
const EL = id => document.getElementById(id);

function setLoading(loading) {
    const btn = EL('btnSearch');
    btn.disabled = loading;
    btn.innerHTML = loading ? '<span class="loading"></span>–®—É–∫–∞—é...' : '–ü–æ—à—É–∫ –ø–æ–∑–∏—Ü—ñ—ó';
}

function showResult(content, type = '') {
    const box = EL('result');
    box.style.display = 'block';
    box.className = 'card';
    if (type) box.classList.add(`result-${type}`);
    box.innerHTML = content;
}

async function doSearch(e) {
    e.preventDefault();
    
    const formData = new FormData(EL('searchForm'));
    const payload = Object.fromEntries(formData.entries());
    payload.location_code = parseInt(payload.location_code, 10);

    // Validaci√≥n b√°sica
    if (!payload.keyword?.trim() || !payload.domain?.trim()) {
        alert('–ó–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è.');
        return;
    }

    setLoading(true);
    
    try {
        const res = await fetch('{{ route('serp.search') }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': csrf,
                'Accept': 'application/json'
            },
            body: JSON.stringify(payload)
        });

        const j = await res.json();
        
        if (j.success && j.data) {
            const d = j.data;
            if (d.found) {
                showResult(`
                    <h3>‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ!</h3>
                    <div class="position-highlight">–ü–æ–∑–∏—Ü—ñ—è #${d.position}</div>
                    <p><strong>–ö–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ:</strong> ${d.keyword}<br>
                    <strong>–î–æ–º–µ–Ω:</strong> ${d.domain}</p>
                    ${d.search_info ? `<div class="search-info">
                        üìç ${d.search_info.location_name} | üåê ${d.search_info.language_name}<br>
                        ‚è∞ ${new Date(d.search_info.searched_at).toLocaleString('uk-UA')}
                    </div>` : ''}
                `, 'success');
            } else {
                showResult(`
                    <h3>‚ö†Ô∏è –°–∞–π—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h3>
                    <p>–î–æ–º–µ–Ω <strong>${d.domain}</strong> –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –¢–û–ü-100 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∑–∞ –∑–∞–ø–∏—Ç–æ–º "<strong>${d.keyword}</strong>".</p>
                    <p>–°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à—ñ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ –∞–±–æ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –¥–æ–º–µ–Ω—É.</p>
                `, 'warning');
            }
        } else {
            showResult(`
                <h3>‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É</h3>
                <p>${j.message || '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'}</p>
                ${j.errors ? '<pre>' + JSON.stringify(j.errors, null, 2) + '</pre>' : ''}
            `, 'error');
        }
    } catch (e) {
        showResult(`
            <h3>üåê –ü–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ</h3>
            <p>–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞.</p>
            <pre>${e.message}</pre>
        `, 'error');
    } finally {
        setLoading(false);
    }
}

// Event listeners
EL('searchForm').addEventListener('submit', doSearch);

// Limpiar resultado cuando cambian los campos
['keyword', 'domain', 'location_code', 'language_code'].forEach(id => {
    EL(id).addEventListener('input', () => {
        EL('result').style.display = 'none';
    });
});
</script>
</body>
</html>